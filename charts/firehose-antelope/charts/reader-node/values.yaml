# Default values for blockchain-service.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 2

image:
  repository: "quay.io/ultra.io/firehose-antelope"
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: reader-node

statefulset:
  enabled: true
  name: nodeos
  serviceAccountName: ""
  # commands
  commonSystemShutdownSignalDelay: 20s
  readerNodeArguments: '--config-dir=/etc/nodeos --data-dir=/nodeos-data --genesis-json=/etc/nodeos/genesis.json'
  readerNodeBlocksChanCapacity: 100
  readerNodeDataDir: /nodeos-data
  readerNodeDebugFirehoseLogs: false
  readerNodeGrpcListenAddr: :9000
  readerNodeManagerApiAddr: :8080
  readerNodePath: nodeos
  readerNodeReadinessMaxLatency: 5s
  readerNodeStartBlockNum: 0
  readerNodeStopBlockNum: 0
  readerNodeWorkingDir: /nodeos-data/reader/work
  commonAutoMemLimitPercent: 90
  extraCommands: []
  # Others
  env:
    - name: HOSTNAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: INFO
      value: ".*"
    - name: NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    - name: PITREOS_THREADS
      value: '4'
  ports:
    - containerPort: 8080
      name: manageos-http
      protocol: TCP
    - containerPort: 9876
      name: nodeos-p2p
      protocol: TCP
    - containerPort: 9102
      name: prometheus
      protocol: TCP
    - containerPort: 9000
      name: publisher
      protocol: TCP
  volumeMounts:
    - mountPath: "/etc/nodeos"
      name: configdir
    - mountPath: "/etc/nodeos/protocol_features"
      name: etc-nodeos-protocolfeatures
  storageSize: 10Gi
  storageLimit: 40Gi
  persistentVolumeClaimEnabled: true
  dataVolumeMount:
    - mountPath: "/nodeos-data"
      name: datadir

# For local test
localVolume:
  enabled: false
  volumeMounts:
    - mountPath: "/storage"
      name: storage
  volume:
    - name: storage
      persistentVolumeClaim:
        claimName: storage-pvc

### Note: First port in list will be used as an Ingress port!
service:
  labels:
    monitoring: "true"
    monitor: prometheus
  type: ClusterIP
  ports:
    - protocol: TCP
      name: prometheus
      port: 9102
      targetPort: 9102
    - protocol: TCP
      name: publisher
      port: 9000
      targetPort: 9000

readinessProbe:
  failureThreshold: 1
  httpGet:
    path: "/healthz"
    port: 8080
    scheme: HTTP
  initialDelaySeconds: 10
  periodSeconds: 5
  successThreshold: 1
  timeoutSeconds: 1

resources:
  limits:
    cpu: 2
    memory: 2Gi
  requests:
    cpu: 1
    memory: 1Gi

pdb:
  minAvailable: 1

nodeSelector:
  role: application
